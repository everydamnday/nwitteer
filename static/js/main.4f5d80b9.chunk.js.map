{"version":3,"sources":["fbase.js","components/Nweet.js","components/Nweetfactory.js","routes/Home.js","components/Authform.js","routes/Auth.js","routes/Profile.js","components/Nav.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweeet","nweetObj","isOwner","useState","editMode","setEditmode","text","newNweet","setNewNweet","onDelete","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","onEditToggle","prev","onNewnweetSubmit","e","preventDefault","update","className","onSubmit","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","class","icon","faTrash","faPencilAlt","NweeetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creator","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","Boolean","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetsArray","docs","map","data","marginTop","Nweet","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","SocialLogin","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","displayname","newDisplayname","setnewDisplayname","history","useHistory","displayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","IsLoggedIn","Nav","maxWidth","width","margin","exact","path","App","init","setInit","setUserobj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f5d80b9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n//edit & newNweet & NweetArray\nconst Nweeet = ({ nweetObj, isOwner }) => {\n  const [editMode, setEditmode] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDelete = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const onEditToggle = () => {\n    setEditmode((prev) => !prev);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewNweet(value);\n  };\n\n  //트윗 text submit\n  const onNewnweetSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditmode(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editMode ? (\n        <>\n          <form onSubmit={onNewnweetSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={onEditToggle} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h3>{nweetObj.text}</h3>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDelete}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={onEditToggle}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweeet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n// input Nweet & image form\nconst NweeetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  //트윗 text onchange\n  const onnweetChange = (e) => {\n    const { value } = e.target;\n    setNweet(value);\n  };\n\n  //트윗 첨부이미지 onchange\n  const onimageChange = (e) => {\n    const { files } = e.target; //input 안에 파일에 접근\n    const theFile = files[0]; // 파일에 접근해서 파일 데이터에 접근\n    const reader = new FileReader(); // 리더기 생성\n    reader.onloadend = (finishedEvent) => {\n      // 파일선택이 끝나면 이벤트 발생\n      const { result } = finishedEvent.target; // result는 img의 주소\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  // 트윗 text & 이미지 submit\n  const onSubmit = async (e) => {\n    if (nweet === \"\") {\n      return;\n    }\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creator: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  //이미지 첨부 클리어\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onnweetChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onimageChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweeetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"../fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweeetFactory from \"components/Nweetfactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetsArray = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setNweets(nweetsArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweeetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={userObj.uid === nweet.creator}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  // 제출할 때, newaccount인지 체크 과정을 거쳐, 참트루를 검증해야 한다.\n  // 그리고 참트루에 따라 계정생성/로그인 로직으로 구분해준다.\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          required\n          placeholder=\"email address\"\n          onChange={onChange}\n          className=\"authInput\"\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          required\n          placeholder=\"password\"\n          onChange={onChange}\n          className=\"authInput\"\n        ></input>\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"} // 나중에 계정 생성과 로그인 창은 분리가 맞겠다.\n          className=\"authInput authSubmit\"\n        ></input>\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/Authform\";\n\n// const Auth = () => <span>Auth</span>;\nconst Auth = () => {\n  const SocialLogin = async (e) => {\n    const { name } = e.target;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={SocialLogin} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={SocialLogin} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [newDisplayname, setnewDisplayname] = useState(userObj.displayname);\n  const history = useHistory();\n  const Logout = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  // const getMynweet = async () => {\n  //   const myNweet = await dbService\n  //     .collection(\"nweets\")\n  //     .where(\"creator\", \"==\", userObj.uid)\n  //     .get();\n  //   const myNweetArray = myNweet.docs.map((doc) => doc.data());\n  // };\n  // useEffect(() => {\n  //   getMynweet();\n  // }, []);\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setnewDisplayname(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayname) {\n      await userObj.updateProfile({\n        displayName: newDisplayname,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayname}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={Logout}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Nav\";\n\nconst AppRouter = ({ refreshUser, IsLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {IsLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {IsLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\n// import fbase from \"fbase\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [IsLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserobj] = useState([]); // 빈객체로 넣어주기\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserobj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        //   setIsLoggedIn(true);\n      } else {\n        setUserobj(null);\n        // setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserobj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          IsLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n// import firebase from \"./fbase\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}